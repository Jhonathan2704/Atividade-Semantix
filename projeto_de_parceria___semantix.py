# -*- coding: utf-8 -*-
"""Projeto de Parceria | Semantix.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1KxE4gldxEsqf1VWcU5oGLF0Pml0lxlZS
"""

import pandas as pd
import matplotlib.pyplot as plt

# Baixar dados direto do GitHub
url = "https://raw.githubusercontent.com/carlosfab/dsnp2/master/datasets/WA_Fn-UseC_-Telco-Customer-Churn.csv"
df = pd.read_csv(url)

# An√°lise inicial
print(df.head())

# Taxa de churn
print("\nTaxa de Cancelamento:", df.Churn.value_counts(normalize=True) * 100)

# Gr√°ficos
fig, ax = plt.subplots(1, 2, figsize=(12, 4))
df['Contract'].value_counts().plot(kind='bar', ax=ax[0], title='Tipos de Contrato')
df.groupby('Contract')['Churn'].value_counts(normalize=True).unstack().plot(kind='bar', ax=ax[1], title='Churn por Contrato')
plt.show()

from sklearn.ensemble import RandomForestClassifier
from sklearn.model_selection import train_test_split

# Pr√©-processamento
df['Churn'] = df['Churn'].map({'Yes': 1, 'No': 0})
X = pd.get_dummies(df.drop(['customerID', 'Churn'], axis=1))  # Transformar categ√≥ricas
y = df['Churn']

# Treinar modelo
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3)
model = RandomForestClassifier()
model.fit(X_train, y_train)

# Avaliar
print("Acur√°cia:", model.score(X_test, y_test))

import shap
explainer = shap.TreeExplainer(model)
shap_values = explainer.shap_values(X_test)
shap.summary_plot(shap_values, X_test)

# %% [markdown]
# ## üìå 1. Baixar e Tratar os Dados de Churn
# Dataset j√° limpo e otimizado para o Looker Studio
# %%

# Importar bibliotecas
import pandas as pd
import numpy as np

# Baixar dados diretamente do GitHub (vers√£o tratada)
url = "https://raw.githubusercontent.com/carlosfab/dsnp2/master/datasets/WA_Fn-UseC_-Telco-Customer-Churn.csv"
df = pd.read_csv(url)

# Tratamento final
df['TotalCharges'] = pd.to_numeric(df['TotalCharges'], errors='coerce')  # Corrigir tipo
df['ChurnValue'] = df['Churn'].map({'Yes': 1, 'No': 0})  # Criar vers√£o num√©rica

# Salvar CSV tratado
df.to_csv('telco_churn_tratado.csv', index=False)
print("‚úÖ Arquivo 'telco_churn_tratado.csv' salvo com sucesso!")

# %% [markdown]
# ## üìä 2. An√°lise R√°pida (OPCIONAL)
# %%

# An√°lise b√°sica para verificar os dados
print("\nüîç Estat√≠sticas Chave:")
print(df[['tenure', 'MonthlyCharges', 'TotalCharges']].describe())

print("\nüìä Contagem de Churn:")
print(df['Churn'].value_counts())

# %% [markdown]
# ## üì§ 3. Exportar para Looker Studio
# %%

from google.colab import files
files.download('telco_churn_tratado.csv')  # Baixar para seu computador